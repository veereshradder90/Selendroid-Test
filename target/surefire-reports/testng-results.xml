<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="All Test Suite" duration-ms="53549" started-at="2020-11-23T16:29:49Z" finished-at="2020-11-23T16:30:42Z">
    <groups>
    </groups>
    <test name="Selendrouid Test" duration-ms="53549" started-at="2020-11-23T16:29:49Z" finished-at="2020-11-23T16:30:42Z">
      <class name="io.selendroid.tests.RegisterUserTest">
        <test-method status="PASS" signature="startAppoumserver()[pri:0, instance:io.selendroid.tests.RegisterUserTest@4667ae56]" name="startAppoumserver" is-config="true" duration-ms="9" started-at="2020-11-23T16:29:49Z" finished-at="2020-11-23T16:29:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startAppoumserver -->
        <test-method status="PASS" signature="LaunchApp()[pri:0, instance:io.selendroid.tests.RegisterUserTest@4667ae56]" name="LaunchApp" is-config="true" duration-ms="15258" started-at="2020-11-23T16:29:49Z" finished-at="2020-11-23T16:30:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchApp -->
        <test-method status="PASS" signature="registerUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:io.selendroid.tests.RegisterUserTest@4667ae56]" name="registerUserTest" duration-ms="22085" started-at="2020-11-23T16:30:05Z" data-provider="test-data" finished-at="2020-11-23T16:30:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[veereshradder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc@xyz.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[A@21word]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[veeresh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUserTest -->
        <test-method status="FAIL" signature="registerUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:io.selendroid.tests.RegisterUserTest@4667ae56]" name="registerUserTest" duration-ms="14523" started-at="2020-11-23T16:30:27Z" data-provider="test-data" finished-at="2020-11-23T16:30:41Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at io.appium.java_client.pagefactory.ElementInterceptor.getObject(ElementInterceptor.java:40)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:60)
at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$b598166c.sendKeys(<generated>)
at io.selendroid.pages.RegistrationPage.setUserNameTextbox(RegistrationPage.java:34)
at io.selendroid.tests.RegisterUserTest.registerUserTest(RegisterUserTest.java:34)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUserTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:io.selendroid.tests.RegisterUserTest@4667ae56]" name="afterMethod" is-config="true" duration-ms="1152" started-at="2020-11-23T16:30:41Z" finished-at="2020-11-23T16:30:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- io.selendroid.tests.RegisterUserTest -->
    </test> <!-- Selendrouid Test -->
  </suite> <!-- All Test Suite -->
</testng-results>
